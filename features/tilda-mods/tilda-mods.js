// –í—Å—Ç–∞–≤–∏—Ç—å –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞ shift.js

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
 * @param {string} functionName - –ò–º—è —Ñ—É–Ω–∫—Ü–∏–∏ –≤ window.
 * @returns {Promise<Function>}
 */
function waitForFunction(functionName) {
    return new Promise(resolve => {
        if (window[functionName] && typeof window[functionName] === 'function') {
            return resolve(window[functionName]);
        }
        const interval = setInterval(() => {
            if (window[functionName] && typeof window[functionName] === 'function') {
                clearInterval(interval);
                resolve(window[functionName]);
            }
        }, 100); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 100–º—Å
    });
}  


window.shiftSolutionsConfig = [
    {
        solutionCode: 'super-slider',
        cod: 'SHF001', // –ù–æ–º–µ—Ä –±–ª–æ–∫–∞
        title: '–°—É–ø–µ—Ä –°–ª–∞–π–¥–µ—Ä',
        icon: 'assets/icon128.png', // –ò–∫–æ–Ω–∫–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏
        htmlContent: `
<div id="solution-super-slider" class="feature-block">
    <h3>üé† –°—É–ø–µ—Ä –°–ª–∞–π–¥–µ—Ä</h3>
    <p>–ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –°—É–ø–µ—Ä –°–ª–∞–π–¥–µ—Ä–∞.</p>
    
    <style>
        .shift-slider { position: relative; overflow: hidden; border-radius: 8px; margin: 20px 0; }
        .shift-slider__container { display: flex; transition: transform 0.3s ease; }
        .shift-slider__slide { min-width: 100%; padding: 40px; color: white; text-align: center; }
        .shift-slider__controls { position: absolute; bottom: 20px; left: 50%; transform: translateX(-50%); display: flex; gap: 10px; }
        .shift-slider__btn { width: 12px; height: 12px; border-radius: 50%; border: 2px solid white; background: transparent; cursor: pointer; }
        .shift-slider__btn.active { background: white; }
    </style>
    
    <div class="shift-slider">
        <div class="shift-slider__container">
            <div class="shift-slider__slide" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                <h2>–°–ª–∞–π–¥ 1</h2>
                <p>–ü–µ—Ä–≤—ã–π —Å–ª–∞–π–¥ —Å –∫—Ä–∞—Å–∏–≤—ã–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º</p>
            </div>
            <div class="shift-slider__slide" style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);">
                <h2>–°–ª–∞–π–¥ 2</h2>
                <p>–í—Ç–æ—Ä–æ–π —Å–ª–∞–π–¥ —Å –¥—Ä—É–≥–∏–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º</p>
            </div>
            <div class="shift-slider__slide" style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);">
                <h2>–°–ª–∞–π–¥ 3</h2>
                <p>–¢—Ä–µ—Ç–∏–π —Å–ª–∞–π–¥ —Å —Å–∏–Ω–∏–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º</p>
            </div>
        </div>
        <div class="shift-slider__controls">
            <button class="shift-slider__btn active" data-slide="0"></button>
            <button class="shift-slider__btn" data-slide="1"></button>
            <button class="shift-slider__btn" data-slide="2"></button>
        </div>
    </div>
    
    <script>
        (function() {
            var currentSlide = 0;
            var container = document.querySelector('.shift-slider__container');
            var buttons = document.querySelectorAll('.shift-slider__btn');
            
            if (!container || !buttons.length) return;
            
            function showSlide(index) {
                currentSlide = index;
                container.style.transform = 'translateX(-' + (index * 100) + '%)';
                buttons.forEach(function(btn, i) {
                    btn.classList.toggle('active', i === index);
                });
            }
            
            buttons.forEach(function(btn, index) {
                btn.addEventListener('click', function() { showSlide(index); });
            });
            
            setInterval(function() {
                currentSlide = (currentSlide + 1) % 3;
                showSlide(currentSlide);
            }, 5000);
        })();
    </script>
</div>
        `
    },
    {
        solutionCode: 'super-grid',
        cod: 'SHF002',
        title: '–°—É–ø–µ—Ä –ì—Ä–∏–¥',
        icon: 'assets/icon128.png',
        htmlContent: `
<div id="solution-super-grid" class="feature-block">
    <h3>üìê –°—É–ø–µ—Ä –ì—Ä–∏–¥</h3>
    <p>–ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –°—É–ø–µ—Ä –ì—Ä–∏–¥–∞.</p>
    
    <style>
        .shift-grid { display: grid; grid-template-columns: repeat(12, 1fr); gap: 20px; padding: 20px; margin: 20px 0; }
        .shift-grid__item { padding: 20px; background: #f8f9fa; border-radius: 8px; border: 1px solid #e0e0e0; }
    </style>
    
    <div class="shift-grid">
        <div class="shift-grid__item" style="grid-column: span 4;">
            <h3>–ö–æ–ª–æ–Ω–∫–∞ 1</h3>
            <p>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏</p>
        </div>
        <div class="shift-grid__item" style="grid-column: span 4;">
            <h3>–ö–æ–ª–æ–Ω–∫–∞ 2</h3>
            <p>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Ç–æ—Ä–æ–π –∫–æ–ª–æ–Ω–∫–∏</p>
        </div>
        <div class="shift-grid__item" style="grid-column: span 4;">
            <h3>–ö–æ–ª–æ–Ω–∫–∞ 3</h3>
            <p>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç—Ä–µ—Ç—å–µ–π –∫–æ–ª–æ–Ω–∫–∏</p>
        </div>
    </div>
</div>
        `
    },
    {
        solutionCode: 'grid-stacks',
        cod: 'SHF003',
        title: '–ì—Ä–∏–¥-—Å—Ç–µ–∫–∏',
        icon: 'assets/icon128.png',
        htmlContent: `
<div id="solution-grid-stacks" class="feature-block">
    <h3>üìö –ì—Ä–∏–¥-—Å—Ç–µ–∫–∏</h3>
    <p>–ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ì—Ä–∏–¥-—Å—Ç–µ–∫–æ–≤.</p>
    
    <style>
        .shift-grid-stacks { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; padding: 20px; margin: 20px 0; }
        .shift-stack { background: #fff; border-radius: 12px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); overflow: hidden; transition: transform 0.3s ease; }
        .shift-stack:hover { transform: translateY(-5px); }
        .shift-stack__header { color: white; padding: 20px; }
        .shift-stack__content { padding: 20px; }
    </style>
    
    <div class="shift-grid-stacks">
        <div class="shift-stack">
            <div class="shift-stack__header" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                <h3 style="margin: 0; font-size: 18px;">–°—Ç–µ–∫ 1</h3>
                <p style="margin: 5px 0 0 0; opacity: 0.9;">–û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Å—Ç–µ–∫–∞</p>
            </div>
            <div class="shift-stack__content">
                <p>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–≤–æ–≥–æ —Å—Ç–µ–∫–∞ —Å –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.</p>
                <button style="background: #667eea; color: white; border: none; padding: 10px 20px; border-radius: 6px; cursor: pointer; margin-top: 10px;">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
            </div>
        </div>
        <div class="shift-stack">
            <div class="shift-stack__header" style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);">
                <h3 style="margin: 0; font-size: 18px;">–°—Ç–µ–∫ 2</h3>
                <p style="margin: 5px 0 0 0; opacity: 0.9;">–û–ø–∏—Å–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç–µ–∫–∞</p>
            </div>
            <div class="shift-stack__content">
                <p>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç–µ–∫–∞ —Å –¥—Ä—É–≥–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.</p>
                <button style="background: #f093fb; color: white; border: none; padding: 10px 20px; border-radius: 6px; cursor: pointer; margin-top: 10px;">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
            </div>
        </div>
        <div class="shift-stack">
            <div class="shift-stack__header" style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);">
                <h3 style="margin: 0; font-size: 18px;">–°—Ç–µ–∫ 3</h3>
                <p style="margin: 5px 0 0 0; opacity: 0.9;">–û–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ—Ç—å–µ–≥–æ —Å—Ç–µ–∫–∞</p>
            </div>
            <div class="shift-stack__content">
                <p>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç—Ä–µ—Ç—å–µ–≥–æ —Å—Ç–µ–∫–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.</p>
                <button style="background: #4facfe; color: white; border: none; padding: 10px 20px; border-radius: 6px; cursor: pointer; margin-top: 10px;">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
            </div>
        </div>
    </div>
</div>
        `
    },
    {
        solutionCode: 'custom-html',
        cod: 'T123',
        title: '–ö–∞—Å—Ç–æ–º–Ω—ã–π HTML',
        icon: 'assets/icon128.png',
        htmlContent: `
<div id="solution-custom-html" class="feature-block">
    <h3>üîß –ö–∞—Å—Ç–æ–º–Ω—ã–π HTML</h3>
    <p>–ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ö–∞—Å—Ç–æ–º–Ω–æ–≥–æ HTML.</p>
    
    <style>
        .shift-custom-html { padding: 40px; text-align: center; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 12px; margin: 20px 0; }
        .shift-features { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin: 30px 0; }
        .shift-feature { background: rgba(255,255,255,0.1); padding: 20px; border-radius: 8px; backdrop-filter: blur(10px); }
        .shift-cta { background: rgba(255,255,255,0.2); color: white; border: 2px solid white; padding: 15px 30px; border-radius: 25px; font-size: 16px; cursor: pointer; transition: all 0.3s ease; backdrop-filter: blur(10px); }
        .shift-cta:hover { background: white; color: #667eea; transform: translateY(-2px); }
    </style>
    
    <div class="shift-custom-html">
        <div class="shift-custom-content">
            <h2 style="margin: 0 0 20px 0; font-size: 32px; font-weight: 300;">–ö–∞—Å—Ç–æ–º–Ω—ã–π HTML</h2>
            <p style="margin: 0 0 30px 0; font-size: 18px; opacity: 0.9;">–≠—Ç–æ—Ç –±–ª–æ–∫ —Å–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é SHIFT Extension</p>
            
            <div class="shift-features">
                <div class="shift-feature">
                    <div style="font-size: 24px; margin-bottom: 10px;">üöÄ</div>
                    <h4 style="margin: 0 0 10px 0;">–ë—ã—Å—Ç—Ä–æ</h4>
                    <p style="margin: 0; font-size: 14px; opacity: 0.8;">–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–∫–æ–≤</p>
                </div>
                <div class="shift-feature">
                    <div style="font-size: 24px; margin-bottom: 10px;">üé®</div>
                    <h4 style="margin: 0 0 10px 0;">–ö—Ä–∞—Å–∏–≤–æ</h4>
                    <p style="margin: 0; font-size: 14px; opacity: 0.8;">–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω</p>
                </div>
                <div class="shift-feature">
                    <div style="font-size: 24px; margin-bottom: 10px;">‚ö°</div>
                    <h4 style="margin: 0 0 10px 0;">–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ</h4>
                    <p style="margin: 0; font-size: 14px; opacity: 0.8;">–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥</p>
                </div>
            </div>
            
            <button class="shift-cta">–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É</button>
        </div>
    </div>
    
    <script>
        (function() {
            var ctaButton = document.querySelector('.shift-cta');
            if (ctaButton) {
                ctaButton.addEventListener('click', function() {
                    alert('SHIFT Extension —Ä–∞–±–æ—Ç–∞–µ—Ç! üéâ');
                });
            }
        })();
    </script>
</div>
        `
    }
];

console.log('[SHIFT CONFIG] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', window.shiftSolutionsConfig.length, '—Ä–µ—à–µ–Ω–∏–π');

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è "—É–º–Ω–æ–≥–æ" –∏ –±—ã—Å—Ç—Ä–æ–≥–æ –æ–∂–∏–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM.
 * –†–ï–®–ê–ï–¢ –ü–†–û–ë–õ–ï–ú–£ ‚Ññ1: –£–±–∏—Ä–∞–µ—Ç –∑–∞–¥–µ—Ä–∂–∫–∏, —Ä–∞–±–æ—Ç–∞—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ.
 * @param {string} selector - CSS-—Å–µ–ª–µ–∫—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞.
 * @returns {Promise<Element>}
 */
function waitForElement(selector) {
    return new Promise(resolve => {
        const el = document.querySelector(selector);
        if (el) return resolve(el);

        const observer = new MutationObserver(() => {
            const el = document.querySelector(selector);
            if (el) {
                observer.disconnect();
                resolve(el);
            }
        });
        observer.observe(document.body, { childList: true, subtree: true });
    });
}

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏. –°–æ–∑–¥–∞–µ—Ç –≤–∫–ª–∞–¥–∫—É –∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –º–æ–¥–æ–≤.
 * –†–ï–®–ê–ï–¢ –ü–†–û–ë–õ–ï–ú–´ ‚Ññ4 –∏ ‚Ññ9: –°–æ–∑–¥–∞–µ—Ç –≤–∫–ª–∞–¥–∫—É –∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ Tilda.
 */
async function renderShiftPanel() {
    console.log('[SHIFT] –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç—Ä–∏—Å–æ–≤–∫—É –ø–∞–Ω–µ–ª–∏ SHIFT...');
    
    // –ñ–¥–µ–º, –ø–æ–∫–∞ Tilda –∑–∞–≥—Ä—É–∑–∏—Ç —Å–≤–æ—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É
    const libraryContainer = await waitForElement('.tp-library__body');
    const rightSideContainer = await waitForElement('.tp-library-rightside');

    console.log('[SHIFT] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã Tilda –Ω–∞–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å...');

    // --- 1. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ "SHIFT" ---
    const categoryHTML = `
        <div class="tp-library__type-body" id="shift-category-tab" data-library-type-id="-shift-mods">
            <div class="tp-library__type">
                <div class="tp-library__type-title-wrapper">
                    <div class="tp-library__type-title" style="font-weight: 600;">SHIFT –ú–æ–¥—ã</div>
                </div>
            </div>
        </div>
    `;
    libraryContainer.insertAdjacentHTML('afterbegin', categoryHTML);

    // --- 2. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–∞—à–∏—Ö –º–æ–¥–æ–≤ ---
    const shiftBlocksContainerHTML = `
        <div class="tp-library__tpls-list-body" id="tplslist-shift-mods" data-tpls-for-type="-shift-mods" style="display: none;">
            <div class="tp-library__tpls-list-body__container">
                </div>
        </div>
    `;
    rightSideContainer.insertAdjacentHTML('beforeend', shiftBlocksContainerHTML);
    const blocksContainer = rightSideContainer.querySelector('#tplslist-shift-mods .tp-library__tpls-list-body__container');

    // --- 3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –≤—Å—Ç–∞–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ –º–æ–¥–æ–≤ ---
    // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –≤ –ø—Ä–æ–µ–∫—Ç–µ –µ—Å—Ç—å —Ñ–∞–π–ª config.js —Å —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    if (typeof window.shiftSolutionsConfig === 'undefined') {
        console.error('SHIFT: –ö–æ–Ω—Ñ–∏–≥ shiftSolutionsConfig –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }

    console.log('[SHIFT] –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è', window.shiftSolutionsConfig.length, '—Ä–µ—à–µ–Ω–∏–π...');

    window.shiftSolutionsConfig.forEach(config => {
        // –†–ï–®–ê–ï–¢ –ü–†–û–ë–õ–ï–ú–£ ‚Ññ8 –∏ ‚Ññ9: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É Tilda –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ (cod, title)
        const cardHTML = `
            <div class="tp-library__tpl-body" data-solution-code="${config.solutionCode}" data-tpl-id="131">
                <div class="tp-library__tpl-wrapper">
                    <div class="tp-library__tpl-secwrapper">
                        <div class="tp-library__tpl-thirdwrapper">
                             <img class="tp-library__tpl-icon" src="${chrome.runtime.getURL(config.icon)}">
                             <div class="tp-library__tpl-bottom-wrapper">
                                <div class="tp-library__tpl-caption">
                                    <span class="tp-library__tpl-cod">${config.cod}</span>
                                    <span class="tp-library__tpl-title">${config.title}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
        blocksContainer.insertAdjacentHTML('beforeend', cardHTML);
    });

    console.log('[SHIFT] –ö–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–∑–¥–∞–Ω—ã, –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π...');
    addEventListeners();
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π.
 */
function addEventListeners() {
    const shiftTab = document.getElementById('shift-category-tab');
    const shiftBlocksPanel = document.getElementById('tplslist-shift-mods');

    // --- –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫ ---
    // –†–ï–®–ê–ï–¢ –ü–†–û–ë–õ–ï–ú–£ ‚Ññ5: –î–æ–±–∞–≤–ª—è–µ—Ç/—É–±–∏—Ä–∞–µ—Ç –∫–ª–∞—Å—Å—ã –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
    shiftTab.addEventListener('click', () => {
        console.log('[SHIFT] –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É SHIFT...');
        
        document.querySelectorAll('.tp-library__type-body_active').forEach(el => el.classList.remove('tp-library__type-body_active'));
        shiftTab.classList.add('tp-library__type-body_active');
        
        document.querySelectorAll('.tp-library__tpls-list-body_active').forEach(el => el.classList.remove('tp-library__tpls-list-body_active'));
        shiftBlocksPanel.classList.add('tp-library__tpls-list-body_active');
        shiftBlocksPanel.style.display = 'block';
        
        document.querySelector('.tp-library').classList.add('tp-library_rightsideopened');
        
        console.log('[SHIFT] –í–∫–ª–∞–¥–∫–∞ SHIFT –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
    });

    // --- –õ–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–∞ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É ---
    // –†–ï–®–ê–ï–¢ –ü–†–û–ë–õ–ï–ú–´ ‚Ññ2, ‚Ññ6, ‚Ññ7: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±–ª–æ–∫–∞.
    document.querySelectorAll('#tplslist-shift-mods .tp-library__tpl-body').forEach(card => {
        card.addEventListener('click', async () => {
            const solutionCode = card.dataset.solutionCode;
            const config = window.shiftSolutionsConfig.find(s => s.solutionCode === solutionCode);

            if (!config) {
                console.error('[SHIFT] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è:', solutionCode);
                return;
            }

            console.log(`[SHIFT] –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫ –¥–ª—è –º–æ–¥–∞ "${config.title}"`);

            try {
                // 1. –°–∫—Ä—ã–≤–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É —Å–∞–º—ã–º –Ω–∞–¥–µ–∂–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º - —Å–∏–º—É–ª—è—Ü–∏–µ–π –∫–ª–∏–∫–∞.
                const closeButton = document.querySelector('.tp-library__header-close-wrapper .tp-library__header-close');
                if (closeButton) {
                    closeButton.click();
                } else {
                    console.error('[SHIFT] –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
                    // –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞–ø—Ä—è–º—É—é –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
                    const tildaHideLibrary = window.tp__library__hide || window.tp__library__close || window.tpgallery_close;
                    if (typeof tildaHideLibrary === 'function') {
                        tildaHideLibrary();
                    } else {
                        return; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ
                    }
                }
                console.log('[SHIFT] –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å–∫—Ä—ã—Ç–∞');
            
                // 2. –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ API Tilda –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
                await waitForFunction('tp__addRecord');
                await waitForFunction('panel__editrecord_saveval');
                await waitForFunction('tp__updateRecord');
                console.log('[SHIFT] Tilda API –≥–æ—Ç–æ–≤–æ.');
            
                // 3. –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π –±–ª–æ–∫ –∏ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ ID.
                const newRecId = window.tp__addRecord('123', window.afterid || '', true);
                const fullRecId = `rec${newRecId}`;
                console.log(`[SHIFT] –ë–ª–æ–∫ —Å–æ–∑–¥–∞–Ω —Å ID: ${fullRecId}`);
            
                // 4. –ü–æ–ª—É—á–∞–µ–º HTML-–∫–æ–Ω—Ç–µ–Ω—Ç (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏–ª–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏).
                const htmlContent = typeof config.getHtmlContent === 'function' 
                    ? config.getHtmlContent() 
                    : config.htmlContent;
            
                if (!htmlContent) {
                    console.error('[SHIFT] HTML-–∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –±–ª–æ–∫–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω!');
                    return;
                }
                
                // 5. –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û –°–û–•–†–ê–ù–Ø–ï–ú –î–ê–ù–ù–´–ï –ù–ê–ü–†–Ø–ú–£–Æ
                console.log('[SHIFT] –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –∫–æ–Ω—Ç–µ–Ω—Ç...');
                await window.panel__editrecord_saveval(fullRecId, 'html', htmlContent);
                console.log('[SHIFT] HTML –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω.');
            
                console.log('[SHIFT] –î–æ–±–∞–≤–ª—è–µ–º CSS –∫–ª–∞—Å—Å "dbm-block"...');
                await window.panel__editrecord_saveval(fullRecId, 'cssclassname', 'dbm-block');
                console.log('[SHIFT] CSS –∫–ª–∞—Å—Å "dbm-block" –¥–æ–±–∞–≤–ª–µ–Ω.');
                
                // 6. –û–±–Ω–æ–≤–ª—è–µ–º –±–ª–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, —á—Ç–æ–±—ã –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∑–∏–ª–∏—Å—å.
                await window.tp__updateRecord(fullRecId);
                
                console.log(`[SHIFT] –ú–æ–¥ "${config.title}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!`);
            
            } catch (error) {
                console.error('[SHIFT] –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–ª–æ–∫–∞:', error);
            }
        });
    });

    console.log('[SHIFT] –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–æ–±–∞–≤–ª–µ–Ω—ã');
}

// ============================================================================
// –≠–ö–°–ü–û–†–¢ –§–£–ù–ö–¶–ò–ô –î–õ–Ø –û–¢–õ–ê–î–ö–ò
// ============================================================================

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.shiftDebug = {
    // –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    renderShiftPanel,
    addEventListeners,
    waitForElement,
    
    // –î–∞–Ω–Ω—ã–µ
    shiftSolutionsConfig: () => window.shiftSolutionsConfig,
    
    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    testTildaAPI: function() {
        console.log('[SHIFT DEBUG] –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Tilda API...');
        const api = {
            tpAddRecord: typeof window.tp__addRecord === 'function',
            panelEditRecord: typeof window.panel__editrecord === 'function',
            tpLibraryHide: typeof window.tp__library__hide === 'function',
            recordDel: typeof window.record__del === 'function',
            recordOnoff: typeof window.record__onoff === 'function'
        };
        console.log('[SHIFT DEBUG] Tilda API —Å—Ç–∞—Ç—É—Å:', api);
        return api;
    },
    
    testWaitForElement: async function(selector, timeout = 5000) {
        console.log(`[SHIFT DEBUG] –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞: ${selector}`);
        const startTime = Date.now();
        const element = await waitForElement(selector);
        const elapsedTime = Date.now() - startTime;
        
        if (element) {
            console.log(`[SHIFT DEBUG] –≠–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω –∑–∞ ${elapsedTime}–º—Å:`, element);
        } else {
            console.log(`[SHIFT DEBUG] –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∑–∞ ${elapsedTime}–º—Å`);
        }
        
        return element;
    },
    
    testAddBlock: async function(solutionCode) {
        const config = window.shiftSolutionsConfig.find(s => s.solutionCode === solutionCode);
        if (!config) {
            console.error('[SHIFT DEBUG] –†–µ—à–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ:', solutionCode);
            return;
        }
        
        console.log('[SHIFT DEBUG] –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–∞:', config.title);
        
        try {
            // 1. –°–∫—Ä—ã–≤–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É
            window.tp__library__hide();
            
            // 2. –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫
            const newRecId = window.tp__addRecord('123', window.afterid || '', true);
            const fullRecId = `rec${newRecId}`;
            
            // 3. –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            window.panel__editrecord(fullRecId, 'content');
            
            // 4. –ñ–¥–µ–º –ø–æ–ª–µ –¥–ª—è HTML
            const htmlTextarea = await waitForElement('#ts-control-html-code');
            
            // 5. –í—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–¥
            htmlTextarea.value = config.htmlContent;
            htmlTextarea.dispatchEvent(new Event('input', { bubbles: true }));
            
            // 6. –°–æ—Ö—Ä–∞–Ω—è–µ–º
            const saveButton = await waitForElement('.ts-btn-pro-close');
            if (saveButton) {
                saveButton.click();
                console.log('[SHIFT DEBUG] –ë–ª–æ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!');
            }
            
        } catch (error) {
            console.error('[SHIFT DEBUG] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
        }
    },
    
    listBlocks: function() {
        const blocks = document.querySelectorAll('.record[data-record-cod^="SHF"], .record[data-record-cod="T123"]');
        console.log('[SHIFT DEBUG] –ù–∞–π–¥–µ–Ω–Ω—ã–µ SHIFT –±–ª–æ–∫–∏:', blocks.length);
        blocks.forEach((block, index) => {
            const recId = block.id;
            const recordCod = block.getAttribute('data-record-cod');
            const title = block.getAttribute('data-title');
            console.log(`[SHIFT DEBUG] –ë–ª–æ–∫ ${index + 1}:`, { recId, recordCod, title });
        });
        return blocks;
    },
    
    testFullFlow: async function(solutionCode) {
        console.log('[SHIFT DEBUG] –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø–æ—Ç–æ–∫ —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–∫–∞...');
        const config = window.shiftSolutionsConfig.find(s => s.solutionCode === solutionCode);
        if (!config) {
            console.error('[SHIFT DEBUG] –†–µ—à–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ:', solutionCode);
            return;
        }
        
        console.log('[SHIFT DEBUG] –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –¥–ª—è:', config.title);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º API
        const api = this.testTildaAPI();
        if (!api.tpAddRecord || !api.panelEditRecord) {
            console.error('[SHIFT DEBUG] Tilda API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            return;
        }
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–∫–∞
        await this.testAddBlock(solutionCode);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        setTimeout(() => {
            this.listBlocks();
        }, 2000);
    }
};

console.log('[SHIFT] –§—É–Ω–∫—Ü–∏–∏ –æ—Ç–ª–∞–¥–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ window.shiftDebug');

// ============================================================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
// ============================================================================

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
 */
async function initShiftExtension() {
    console.log('[SHIFT] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SHIFT Extension...');
    console.log('[SHIFT] –¢–µ–∫—É—â–∏–π URL:', window.location.href);
    console.log('[SHIFT] Document ready state:', document.readyState);
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Tilda
        const isTildaPage = window.location.href.includes('tilda.cc') || 
                           window.location.href.includes('tilda.ws') || 
                           window.location.href.includes('tilda.ru');
        
        if (!isTildaPage) {
            console.log('[SHIFT] –ù–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Tilda, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
            console.log('[SHIFT] –¢–µ–∫—É—â–∏–π URL:', window.location.href);
            return;
        }
        
        console.log('[SHIFT] –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Tilda, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
        if (document.readyState === 'loading') {
            await new Promise(resolve => document.addEventListener('DOMContentLoaded', resolve));
        }
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        let attempts = 0;
        while (typeof window.shiftSolutionsConfig === 'undefined' && attempts < 50) {
            await new Promise(resolve => setTimeout(resolve, 100));
            attempts++;
        }
        
        if (typeof window.shiftSolutionsConfig === 'undefined') {
            console.error('[SHIFT] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è shiftSolutionsConfig –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
            return;
        }
        
        console.log('[SHIFT] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –Ω–∞—á–∏–Ω–∞–µ–º –æ—Ç—Ä–∏—Å–æ–≤–∫—É...');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Ä–∏—Å–æ–≤–∫—É –ø–∞–Ω–µ–ª–∏
        await renderShiftPanel();
        
        console.log('[SHIFT] SHIFT Extension —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
        
    } catch (error) {
        console.error('[SHIFT] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
console.log('[SHIFT] –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é SHIFT Extension...');
initShiftExtension();
console.log('[SHIFT] –§–∞–π–ª shift.js –∑–∞–≥—Ä—É–∂–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é');